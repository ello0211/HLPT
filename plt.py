import matplotlib.pyplot as plt
from scipy.interpolate import make_interp_spline
import numpy as np
# 示例数据
training_data_size = [0.05,0.1,0.15,0.2	,0.25	,0.31	,0.36	,0.41	,0.46	,0.51	,0.56	,0.61	,0.66	,0.71	,0.76	,0.82	,0.87	,0.92	,0.97	,1.02	,1.07	,1.12	,1.17	,1.22	,1.27	,1.32	,1.38	,1.43	,1.48	,1.53	,1.58	,1.63	,1.68	,1.73	,1.78	,1.83	,1.89	,1.94	,1.99	,2.04	,2.09	,2.14	,2.19	,2.24	,2.29	,2.34	,2.39	,2.45	,2.5	,2.55	,2.6	,2.65	,2.7	,2.75	,2.8	,2.85	,2.9	,2.96]

fig = plt.figure()
# rewrite
# MRR = [6.54, 6.79, 9.44, 11.81, 11.94, 12.02]
# NDCG_3 = [5.64, 5.90, 8.19, 10.32, 10.41, 10.52]
# Recall_10 = [12.77, 13.68, 17.86, 22.28, 22.55, 22.67]
# Recall_100 = [24.74, 26.89, 34.61, 42.16, 42.20, 43.16]
plt.rcParams.update({"font.size":15})
x=[0.25	,0.51	,0.76	,1.02	,1.27	,1.53	,1.78	,2.04	,2.29	,2.55	,2.8]
x2=[0.15625,0.25,0.34375,0.5,0.65625,0.75,0.84375]
# expansion
MRR = [1.8187 ,1.2354	,0.8153	,0.6576	,0.647	,0.6291	,0.7402	,0.7275	,0.6544	,0.661	,0.7237	,0.8864	,0.6751	,0.6721	,0.6462	,0.6117	,0.6607	,0.6329	,0.6103	,0.6238	,0.5391	,0.5675	,0.5835	,0.5787	,0.5421	,0.5283	,0.5225	,0.5508	,0.5364	,0.4968	,0.5107	,0.533	,0.4967	,0.5057	,0.4954	,0.5016	,0.5234	,0.4708	,0.5212	,0.4254	,0.3935	,0.4	,0.3922	,0.3917	,0.3991	,0.4114	,0.3994	,0.3828	,0.3795	,0.3817	,0.3783	,0.3665	,0.379	,0.3945	,0.3783	,0.3833	,0.3501	,0.3807]
NDCG_3 = [1.9378 ,1.5121	,0.8356	,0.6998	,0.6784	,0.6614	,0.6288	,0.6244	,0.6336	,0.6165	,0.6044	,0.5945	,0.5719	,0.6075	,0.5567	,0.5699	,0.5514	,0.534	,0.5301	,0.553	,0.465	,0.4926	,0.4799	,0.4833	,0.4683	,0.5035	,0.4839	,0.453	,0.4311	,0.4673	,0.441	,0.4382	,0.4804	,0.4653	,0.4507	,0.454	,0.4862	,0.4546	,0.4388	,0.3765	,0.366	,0.3661	,0.3724	,0.3728	,0.3597	,0.3505	,0.3677	,0.345	,0.3627	,0.3364	,0.3303	,0.3619	,0.3255	,0.3214	,0.3353	,0.3331	,0.3452	,0.3051]
Recall_10 = [9.5261	,8.3211	,7.2556	,6.5826	,6.0705	,5.5923	,5.0734	,4.5753	,4.1938	,3.893	,3.6703	,3.3196	,3.175	,2.8152	,2.333	,2.0056	,1.6893	,1.5938	,1.5147	,1.4118	,1.3579	,1.3068	,1.2399	,1.1707	,1.0973	,1.0764	,1.069	,1.0217	,1.009	,0.9716	,0.9219	,0.9208	,0.9052	,0.9196	,0.9113	,0.8911	,0.8878	,0.8751	,0.866	,0.8658	,0.8475	,0.8087	,0.8087	,0.7973	,0.7767	,0.8101	,0.855	,0.8179	,0.8151	,0.7918	,0.7436	,0.7815	,0.7603	,0.744	,0.8101	,0.7531	,0.797	,0.8177]
HLPT = [0.6665	,0.6226	,0.5835	,0.5601	,0.541	,0.5294	,0.5168	,0.5194	,0.5186	,0.5148	,0.5094]
LoRA = [0.6557	,0.6571	,0.6566	,0.6202	,0.6001	,0.581	,0.5611	,0.556	,0.554	,0.5445	,0.5341]
prefix = [5.7187	,3.739	,2.1489	,1.3887	,1.1389	,0.9941	,0.9166	,0.8674	,0.8392	,0.8187	,0.8103]
y=[56.84,57.67,56.84,60.54,61.70,63.67,62.45]
yy=[61.21,61.21,61.21,61.21,61.21,61.21,61.21]
model=make_interp_spline(training_data_size, MRR)
# 创建折线图，指定不同颜色
xs=np.linspace(min(training_data_size),max(training_data_size),500)
xx=np.linspace(min(x),max(x),100)
xx2=np.linspace(min(x2),max(x2),45)
y1=model(xs)
y2=make_interp_spline(training_data_size, NDCG_3)(xs)
y3=make_interp_spline(training_data_size, Recall_10)(xs)
y4=make_interp_spline(x, prefix)(xx)
y5=make_interp_spline(x, HLPT)(xx)
y6=make_interp_spline(x, LoRA)(xx)
y7=make_interp_spline(x2,y)(xx2)
y8=make_interp_spline(x2,yy)(xx2)
plt.plot(xx2, y7, label='HLPT', color='orange', marker='o',markevery=[0,6,12,22,32,39,44], markersize=10,linestyle='-')# 10 16 22 32 42 48 54
plt.plot(xx2, y8, label='LoRA', color='blue', linestyle='-')
# plt.plot(xs, y1, label='LoRA', color='blue', linestyle='-')
# plt.plot(xs, y2, label='HLPT', color='orange', linestyle='-')
# plt.plot(xs, y3, label='prefix', color='green', linestyle='-')
# plt.plot(training_data_size, Recall_10, label='prefix', color='red', linestyle='-')
#plt.plot(training_data_size, Recall_100, label='R@100', color='green', marker='o', linestyle='-')
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
# 添加标题和标签
plt.title('accuracy', fontsize=20)
# plt.xlabel('training data size')
# plt.ylabel('evaluation score')

# 添加图例
# plt.legend(loc='upper left', bbox_to_anchor=(0.7, 0.9))
plt.legend()

# 显示图表
plt.show()
